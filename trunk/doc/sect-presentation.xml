<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!DOCTYPE book [
<!ENTITY % myent SYSTEM "entities.ent">
%myent;
]>
<book xml:lang="it" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <chapter>
        <title/>
        <section xml:id="sect-presentation">
            <title>Livello presentazione</title>
            <section>
                <title>Scelte progettuali</title>

                <section>
                    <title>Logica di presentazione</title>
                    <para> La logica di presentazione &egrave; stata implementata, in puro stile
                        Java Enterprise, utilizzando sia servlet che JSP, in modo da dividere quanto
                        pi&ugrave; possibile la parte puramente presentazionale, ovvero il
                        codice xhtml, dalla logica di interazione. Questa scelta di utilizzare
                        entrambe le tecnologie &egrave; il solo modo nel quale ci &egrave;
                        sembrato possibile mantenere il codice pulito da ogni traccia di markup,
                        obiettivo a cui tenevamo molto. Le JSP, d'altro canto, sono state create
                        modulari, composte di frammenti JSP (JSPF) rappresentanti elementi ripetuti
                        e significativi, come la parte di head del documento, il titolo, il
                        pi&egrave; di pagina e i menu. Questa suddivisione permette naturalmente
                        semplici e veloci modifiche al layout, senza contare che naturalmente gran
                        parte dello stile &egrave; a parte, descritto in un CSS. Per la
                        comunicazione tra servlet e JSP e viceversa, si &egrave; utilizzato un
                        POJO condiviso, nel quale ad esempio la servlet &egrave; solita inserire
                        i risultati di ritorno delle chiamate ai web service, prima di trasferire il
                        controllo alla JSP. La JSP a quel punto pu&ograve; comodamente leggere
                        le informazioni dall'oggetto condivisio e inserirle adeguatamente
                        formattate, nel punto corretto del codice XHTML. La formattazione dei
                        risultati XML in arrivo dal web service viene svolta all'interno dei metodi
                        getter del POJO, attraverso una trasformazione XSLT. </para>
                </section>
                <section>
                    <title>Caching dei risultati delle ricerche</title>
                    <!-- caching dei risultati -->
                    <para>Durante il processo di navigazione, l'utente sottopone le servlet ad
                        alcuni passaggi di gestione. Per la logica di presentazione alcuni di questi
                        "passaggi" richiedono visualizzazioni differenti dei risultati di ricerca.
                        Questa condizione si presenta nel passaggio tra ricerca semplice e ricerca
                        autenticata, che consente la selezione dei libri mediante un'apposita
                        interfaccia. Con un occhio di riguardo alle performance e grazie
                        alla natura del formato dei dati che vengono scambiati tramite web service
                        tra i livelli di presentazione e di business è stato possibile realizzare un
                        meccanismo di caching dei risultati delle ricerche dell'utente, basato
                        sull'utilizzo delle sessioni http, che consente di non
                        effettuare ulteriori invocazione ai servizi di ricerca lato business ogni
                        qualvolta si presenta la necessità di avere due rappresentazioni differenti
                        dello stesso risultato. Per entrare brevemente nei dettagli implementativi,
                        tale semplice operazione si realizza memorizzando in variabili di sessione
                        il risultato dell'ultima ricerca in formato XML, utilizzando, a seconda
                        delle necessità, differenti trasformazioni XSLT per le rispettive
                        visualizzazioni.</para>
                </section>

                <section>
                    <title>Replicazione HTTP</title>
                    <!-- replicazione http -->
                    <para>Per tollerare guasti di tipo crash tra i nodi del cluster di presentazione
                        e garantire la continuità del servizio, è stato deciso di attivare il
                        supporto per la replicazione della sessione http che offre JBoss. In
                        relazione a quanto accennato nella sezione precedente riguardo alla netta
                        separazione logica dei due livelli centrali, &egrave; doveroso specificare
                        che in tali sessioni non si trovano informazioni o dati utili alla gestione
                        di procedure legate allo stato della sessione che riguardino il lato business,
                        come ad esempio lo stato del carrello, ma viene solamente tenuta traccia
                        dell'identificativo della sessione con il
                        quale l'infrastruttura di gestione degli utenti compirà ogni aggiornamento
                        di stato lato business.</para>
                </section>

            </section>

            <section>
                <title>Scelte implementative</title>
                <para>In questa sezione verr&agrave; illustrata la struttura del lato
                    presentation del progetto Bookshop. Il diagramma in <xref
                        linkend="presentation_packages_overview"/> descrive la struttura complessiva
                    del progetto, organizzato in package. I diversi package verranno esposti
                    pi&ugrave; in dettaglio nelle sezioni che seguiranno.</para>
                <figure xml:id="presentation_packages_overview">
                    <title>Panoramica su package e cartelle</title>
                    <mediaobject>
                        <imageobject role="fo">
                            <imagedata
                                fileref="DiagrammiPresentation/presentation_packages_overview.svg"
                                align="center" depth="245pt" format="SVG"/>
                        </imageobject>
                        <imageobject role="dblatex">
                            <imagedata
                                fileref="DiagrammiPresentation/presentation_packages_overview.pdf"
                                align="center" depth="245pt" format="PDF"/>
                        </imageobject>
                    </mediaobject>
                    <caption>
                        <para>La parte di presentazione &egrave; raccolta in un progetto dal
                            nome <filename>g8.bookshop.presentation</filename>. Esso contiene due
                            macro package: <filename>business</filename> e
                                <filename>presentation</filename>. Il primo, business, contiene le
                            classi che permettono alle servlet di connettersi ai web service sottostanti.
                            Il secondo, pi&ugrave; complesso, contiene la parte di presentazione
                            vera e propria, divisa nelle due parti <filename>servlet</filename> e
                                <filename>content</filename>. Il package servlet naturalmente
                            raggruppa le classi che implementano l'interfaccia
                                <filename>javax.servlet.http.HttpServlet</filename>, mentre il
                            package content raccoglie classi e altri file relativi alla gestione del
                            contenuto. Spiegazioni pi&ugrave; accurate sul ruolo dei package
                            descritti e sulle loro classi verranno fatti in seguito.</para>
                        <para> Essenziale nella presentazione &egrave; anche la cartella
                                <filename>WebContent</filename>, la quale contiente le pagine JSP
                            del progetto, i frammenti JSPF usati per modularizzare le pagine stesse,
                            e i fogli di stile CSS. </para>
                    </caption>
                </figure>
                <section>
                    <title>Servlet</title>
                    <figure xml:id="presentation_servlet">
                        <title>
                            <filename>g8.bookshop.presentation.servlet</filename>
                        </title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata fileref="DiagrammiPresentation/presentation_servlet.svg"
                                    align="center" depth="450pt" format="SVG"/>
                            </imageobject>
                            <imageobject role="dblatex">
                                <imagedata fileref="DiagrammiPresentation/presentation_servlet.pdf"
                                    align="center" depth="450pt" format="PDF"/>
                            </imageobject>
                        </mediaobject>
                        <caption>
                            <para>Il pacchetto <filename>g8.bookshop.presentation.servlet</filename>
                                raggruppa le classi che implementano l'interfaccia <filename>HttpServlet</filename>.
                                Contiene tre pacchetti, <filename>usermanager</filename>,
                                    <filename>catalogue</filename> e
                                    <filename>shoppingcart</filename> i quali contengono le servlet
                                che si occupano, nell'ordine, di autenticazione e disconnessione,
                                della gestione del catalogo (la ricerca), e della gestione del
                                carrello (visualizzazione e modifica). La servlet <filename>Home</filename>
                                si trova nel package principale, insieme al file
                                <filename>Utils.java</filename> che fornisce metodi
                                ausiliari per la manipolazione di stringhe XML, per il passaggio di
                                controllo da una servlet a una JSP e per la gestione dell'oggetto
                                condiviso tra servlet e JSP che permette il passaggio di dati tra le
                                due. </para>
                            <para>Il trasferimento del controllo tra servlet e JSP &egrave;
                                mediato dalla classe
                                    <filename>g8.bookshop.presentation.Constants</filename>, la
                                quale contiene, oltre a diverse costanti del progetto, ogni
                                riferimento ai file JSP. Questo collegamento &egrave; illustrato
                                nel diagramma in <xref linkend="presentation_servlet_to_jsp"/>
                            </para>
                            <para>A titolo di esempio, in questo diagramma sono state rappresentate
                                anche le librerie esterne utilizzate dal package.</para>
                        </caption>
                    </figure>
                    <figure xml:id="presentation_servlet_to_jsp">
                        <title>
                            <filename>g8.bookshop.presentation.Constants</filename>
                        </title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="DiagrammiPresentation/presentation_servlet_to_jsp.svg"
                                    align="center" depth="360pt" format="SVG"/>
                            </imageobject>
                            <imageobject role="dblatex">
                                <imagedata
                                    fileref="DiagrammiPresentation/presentation_servlet_to_jsp.pdf"
                                    align="center" depth="360pt" format="PDF"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                </section>
                <section>
                    <title>WebContent: pagine JSP</title>
                    <para>La cartella WebContent contiene le JSP e i frammenti JSPF. In <xref
                            linkend="presentation_webcontent"/> sono rappresentati i file contenuti.
                        In <xref linkend="presentation_webcontent_relationships"/> si sintetizza
                        come i frammenti JSPF sono inclusi nelle diverse pagine JSP. </para>
                    <figure xml:id="presentation_webcontent">
                        <title><filename>WebContent</filename>: contenitore per pagine JSP e
                            JSPF</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="DiagrammiPresentation/presentation_webcontent.svg"
                                    align="center" depth="240pt" format="SVG"/>
                            </imageobject>
                            <imageobject role="dblatex">
                                <imagedata
                                    fileref="DiagrammiPresentation/presentation_webcontent.pdf"
                                    align="center" depth="345pt" format="PDF"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                    <figure xml:id="presentation_webcontent_relationships">
                        <title><filename>Web Content</filename>: relazioni tra pagine JSP e
                            frammenti JSPF</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="DiagrammiPresentation/presentation_webcontent_relationships.svg"
                                    align="center" depth="340pt" format="SVG"/>
                            </imageobject>
                            <imageobject role="dblatex">
                                <imagedata
                                    fileref="DiagrammiPresentation/presentation_webcontent_relationships.pdf"
                                    align="center" depth="345pt" format="PDF"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                </section>
                <section>
                    <title>Content: gestione, manipolazione e formattazione dei contenuti</title>
                    <para>Il diagramma in <xref linkend="presentation_content"/> rappresenta il
                        package delegato alla gestione dei contenuti, con le classi per la
                        trasformazione XSLT del XML proveniente dal lato business, e la classe
                        dedicata alla condivisione dei contenuti tra JSP e servlet. Vengono poi
                        illustrate in <xref linkend="presentation_connections"/> le relazioni tra i
                        diversi package che compongono l'intero lato presentazione.</para>
                    <figure xml:id="presentation_content">
                        <title><filename>g8.bookshop.presentation.content</filename>: gestione dei
                            contenuti.</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata fileref="DiagrammiPresentation/presentation_content.svg"
                                    align="center" depth="340pt" format="SVG"/>
                            </imageobject>
                            <imageobject role="dblatex">
                                <imagedata fileref="DiagrammiPresentation/presentation_content.pdf"
                                    align="center" depth="345pt" format="PDF"/>
                            </imageobject>
                        </mediaobject>
                        <caption>
                            <para> Il package <filename>manager</filename> contiene una sola classe,
                                    <filename>DataExchange</filename>, che viene utilizzata come
                                oggetto condiviso tra servlet e JSP per il passaggio di informazioni
                                e contenuti tra le due; essa contiene esclusivamente metodi getter e
                                setter (tralasciati per semplicit&agrave; nel diagramma).</para>
                            <para>Il package <filename>formatter</filename> si occupa invece
                                dell'interpretazione dei dati che le servlet ricevono dal lato
                                business: le liste di libri risultanti da una ricerca, o il
                                contenuto di un carrello. La classe
                                    <filename>XsltFormatter</filename> &egrave; la classe
                                centrale del package. Essa utilizza un foglio di stile XSLT per la
                                trasformazione dell'XML ricevuto in XHTML pronto per la
                                visualizzazione. Per farlo, carica il foglio di stile attraverso la
                                classe <filename>StylesheetCache</filename> che a sua volta si
                                avvale dei metodi forniti dalla classe
                                    <filename>FileLoader</filename>.
                                    <filename>StylesheetCache</filename> &egrave; una classe
                                singleton che implementa una cache per i fogli di stile in modo da
                                evitare di ricaricare pi&ugrave; volte lo stesso foglio di stile
                                ad ogni invocazione del transformatore.</para>
                        </caption>
                    </figure>
                    <para>Il diagramma in <xref linkend="presentation_connections"/> rappresenta le
                        relazioni</para>
                    <figure xml:id="presentation_connections">
                        <title><filename>g8.bookshop.presentation</filename>: relazioni tra classi e
                            package del progetto g8Presentation</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="DiagrammiPresentation/presentation_connections.svg"
                                    align="center" depth="300pt" format="SVG"/>
                            </imageobject>
                            <imageobject role="dblatex">
                                <imagedata
                                    fileref="DiagrammiPresentation/presentation_connections.pdf"
                                    align="center" depth="345pt" format="PDF"/>
                            </imageobject>
                        </mediaobject>
                        <caption>
                            <para>In questo diagramma &egrave; rappresentato l'intero lato
                                presentation con le relazioni tra le sue classi e i suoi package.
                                Praticamente l'intero lato presentation dipende dalle classi di
                                ausilio <filename>Utils</filename> e <filename>Constants</filename>.
                                Le diverse servlet sono indipententi tra loro, mentre utilizzano le
                                classi del package <filename>business.ws</filename> per la
                                connessione ai web service, le informazioni nella classe
                                    <filename>Constants</filename> per richiamare le JSP, e la
                                classe <filename>DataExchange</filename> per los scambio di
                                informazioni con le JSP.</para>
                            <para>Quest'ultima classe, <filename>DataExchange</filename>
                                &egrave; la sola ad utilizzare i metodi della classe
                                    <filename>XsltTransformer</filename>, la quale a sua volta
                                &egrave; la sola ad utilizzare i metodi delle altre classi del
                                suo package.</para>
                        </caption>
                    </figure>
                </section>
                <section>
                    <title>Web service</title>
                    <para>In questa sezione due diagrammi descrivono i web service utilizzati nel
                        progetto. Alcune di queste classi sono state generate automaticamente a
                        partire dalle altre. Non tutte vengono utilizzate.</para>
                    <para>Nel diagramma in <xref linkend="presentation_ws_catalogueservice"/>
                        &egrave; rappresentato uno dei tre sottoinsiemi di queste classi, ovvero
                        tutte le classi relative al <filename>CatalogueService</filename>. Tutte le classi del package
                        sono poi riassunte nel digramma in <xref linkend="presentation_ws"/>.</para>
                    <figure xml:id="presentation_ws_catalogueservice">
                        <title><filename>g8.bookshop.business.ws.catalogueservice</filename>: un
                            esempio di web service</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="DiagrammiPresentation/presentation_ws_catalogueservice.svg"
                                    align="center" depth="240pt" format="SVG"/>
                            </imageobject>
                            <imageobject role="dblatex">
                                <imagedata
                                    fileref="DiagrammiPresentation/presentation_ws_catalogueservice.pdf"
                                    align="center" depth="345pt" format="PDF"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                    <figure xml:id="presentation_ws">
                        <title><filename>g8.bookshop.business.ws</filename>: diagramma completo dei
                            web service</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata fileref="DiagrammiPresentation/presentation_ws.svg"
                                    align="center" depth="300pt" format="SVG"/>
                            </imageobject>
                            <imageobject role="dblatex">
                                <imagedata fileref="DiagrammiPresentation/presentation_ws.pdf"
                                    align="center" depth="345pt" format="PDF"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                </section>
                <section>
                    <title>Flusso</title>
                    <para>Si riporta in questa sezione un sequence diagram non esaustivo per quanto
                        riguarda la logica del lato presentation, ma utile per la comprensione di
                        alcuni suoi funzionamenti fondamentali. Il caso d'uso rappresentato
                        &egrave; l'autenticazione, lo stesso che si &egrave; rappresentato
                        relativamente al lato business: in questo modo speriamo di dare una visione
                        complessiva sul sistema. In questo caso d'uso non viene effettuata la
                        trasformazione XSLT operata internamente al POJO
                            <filename>DataExchange</filename>, ma non ci &egrave; parsa
                        un'operazione abbastanza significativa da necessitare ad ogni costo di
                        essere rappresentata.</para>
                    <figure xml:id="sequence_presentation_auth">
                        <title>Diagramma di sequenza per il caso d'uso Autenticazione</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="DiagrammiPresentation/sequence_presentation_auth.svg"
                                    align="center" depth="400pt" format="SVG"/>
                            </imageobject>
                            <imageobject role="dblatex">
                                <imagedata
                                    fileref="DiagrammiPresentation/sequence_presentation_auth.pdf"
                                    align="center" depth="345pt" format="PDF"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                    <para> Il caso d'uso viene innescato quando l'utente, trovandosi sulla pagina
                        <filename>guest_search.jsp</filename>, notifica la sua volont&agrave; di autenticarsi
                        selezionando un collegamento apposito. Viene di conseguenza caricata la pagina
                        <filename>auth.jsp</filename>, nel quale si trova la maschera di autenticazione. L'utente vi
                        inserisce il nome utente e la password e selezionando "submit" questi valori vengono
                        passati alla servlet incaricata dell'autenticazione, <filename>Authenticate</filename>. </para>
                    <para>La servlet in primo luogo verifica che l'utente non gi&agrave;
                        autenticato per il sistema: questa informazione pu&ograve; trovarsi solo
                        all'interno dell'oggetto condiviso tra servlet e JSP, <filename>DataExchange</filename>. La
                        servlet quindi richiede, attraverso un metodo della classe <filename>Utils</filename>, l'oggetto
                        <filename>DataExchange</filename>: le viene restituito un nuovo oggetto qualora nessuno
                        esistesse, o l'oggetto gi&agrave; esistente. A questo oggetto essa
                        richiede lo stato di autenticazione dell'utente.</para>
                    <para>Qualora l'utente non risultasse autenticato la servlet provvede a
                        contattare il web service: per farlo, crea un nuovo oggetto <filename>ServiceLocator</filename>
                        al quale poi richiede la creazione di un oggetto <filename>UserManagerService</filename>. A
                        questo oggetto fa la sua richiesta di autenticazione. La richiesta raggiunge
                        il lato business dove viene completata: questa parte non &egrave;
                        relativa al lato presentation e pertanto non &egrave; rappresentata nel
                        diagramma. Quel che &egrave; rappresentato &egrave; il risultato
                        della computazione che ritorna alla servlet Authenticate, la quale
                        conseguentemente setta opportuni parametri indicanti il nuovo stato di
                        autenticazione nell'oggetto condiviso, nonch&eacute; un messaggio
                        testuale indicante il risultato dell'autenticazione (completata, o
                        fallita).</para>
                    <para> Si verifica nuovamente lo stato dell'autenticazione, e attraverso il
                        metodo <filename>forwardToPage</filename> della classe <filename>Utils</filename>,
                        si trasferisce il controllo alla JSP appropriata: se l'utente risulta
                        non autenticato, a <filename>guest_search.jsp</filename>,
                        oppure a <filename>customer_search.jsp</filename>. La JSP chiamata
                        legger&agrave; le informazioni dall'oggetto condiviso, in particolare il messaggio sul
                        risultato dell'autenticazione, che visualizzer&agrave; adeguatamente
                        nella pagina. </para>
                </section>
            </section>
        </section>
    </chapter>
</book>
